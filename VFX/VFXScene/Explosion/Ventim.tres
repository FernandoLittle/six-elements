[gd_resource type="VisualShader" load_steps=12 format=3 uid="uid://ct2pgydc6rbo4"]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_oapf2"]
op_type = 0

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_rmrbw"]
operator = 2

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_euxxw"]
parameter_name = "ColorParameter"
default_value_enabled = true

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_h60ls"]
parameter_name = "Texture2DParameter"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_oiqlr"]
source = 5

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_gcxjr"]
operator = 5

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_mbi8y"]
parameter_name = "Power"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_nbe41"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_y7d8y"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ngyh1"]
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_wr72f"]
parameter_name = "Velocity"
default_value_enabled = true
default_value = 1.0

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

uniform float Velocity = 1.0;
uniform sampler2D Texture2DParameter;
uniform float Power = 1.0;
uniform vec4 ColorParameter : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);



void fragment() {
// Input:7
	float n_out7p0 = TIME;


// FloatParameter:9
	float n_out9p0 = Velocity;


// FloatOp:8
	float n_out8p0 = n_out7p0 * n_out9p0;


// VectorCompose:10
	float n_in10p0 = 0.00000;
	vec2 n_out10p0 = vec2(n_in10p0, n_out8p0);


// UVFunc:6
	vec2 n_in6p1 = vec2(1.00000, 1.00000);
	vec2 n_out6p0 = n_out10p0 * n_in6p1 + UV;


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(Texture2DParameter, n_out6p0);


// FloatParameter:5
	float n_out5p0 = Power;


// FloatOp:4
	float n_out4p0 = pow(n_out3p0.x, n_out5p0);


// ColorParameter:12
	vec4 n_out12p0 = ColorParameter;


// VectorOp:11
	vec3 n_out11p0 = vec3(n_out4p0) * vec3(n_out12p0.xyz);


// Output:0
	ALBEDO = n_out11p0;
	ALPHA = n_out4p0;


}
"
flags/unshaded = true
nodes/fragment/0/position = Vector2(720, 80)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_h60ls")
nodes/fragment/2/position = Vector2(-460, 460)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_oiqlr")
nodes/fragment/3/position = Vector2(-140, 280)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatOp_gcxjr")
nodes/fragment/4/position = Vector2(100, 120)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatParameter_mbi8y")
nodes/fragment/5/position = Vector2(-340, 0)
nodes/fragment/6/node = SubResource("VisualShaderNodeUVFunc_nbe41")
nodes/fragment/6/position = Vector2(-540, 260)
nodes/fragment/7/node = SubResource("VisualShaderNodeInput_y7d8y")
nodes/fragment/7/position = Vector2(-1180, 180)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatOp_ngyh1")
nodes/fragment/8/position = Vector2(-880, 380)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatParameter_wr72f")
nodes/fragment/9/position = Vector2(-1260, 440)
nodes/fragment/10/node = SubResource("VisualShaderNodeVectorCompose_oapf2")
nodes/fragment/10/position = Vector2(-760, 100)
nodes/fragment/11/node = SubResource("VisualShaderNodeVectorOp_rmrbw")
nodes/fragment/11/position = Vector2(427.323, -41.2018)
nodes/fragment/12/node = SubResource("VisualShaderNodeColorParameter_euxxw")
nodes/fragment/12/position = Vector2(126.158, -123.338)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 3, 0, 4, 0, 4, 0, 0, 1, 5, 0, 4, 1, 6, 0, 3, 0, 7, 0, 8, 0, 9, 0, 8, 1, 10, 0, 6, 2, 8, 0, 10, 1, 4, 0, 11, 0, 12, 0, 11, 1, 11, 0, 0, 0)
