[gd_resource type="VisualShader" load_steps=13 format=3 uid="uid://c3ux5d6gljew8"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_aqfx6"]
parameter_name = "ColorParameter"
default_value_enabled = true

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_lauyt"]
operator = 2

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_aqfx6"]
function = 31

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_6pngg"]
parameter_name = "Alpha"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeFresnel" id="VisualShaderNodeFresnel_mua1j"]
default_input_values = [2, true, 3, 1.0]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_j8258"]
function = 31

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_uk3bl"]
input_name = "normal"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_71r1b"]
input_name = "view"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_vmf6n"]
parameter_name = "FloatParameter"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_3x2dc"]
operator = 5

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_c4jlb"]
parameter_name = "FloatParameter2"

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_8rtwy"]

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

uniform float FloatParameter = 1.0;
uniform float FloatParameter2;
uniform vec4 ColorParameter : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);
uniform float Alpha = 1.0;



void fragment() {
// Input:4
	vec3 n_out4p0 = NORMAL;


// Input:5
	vec3 n_out5p0 = VIEW;


// FloatParameter:6
	float n_out6p0 = FloatParameter;


// Fresnel:2
	float n_out2p0 = pow(clamp(dot(n_out4p0, n_out5p0), 0.0, 1.0), n_out6p0);


// FloatFunc:3
	float n_out3p0 = 1.0 - n_out2p0;


// FloatParameter:8
	float n_out8p0 = FloatParameter2;


// FloatOp:7
	float n_out7p0 = pow(n_out3p0, n_out8p0);


// Clamp:9
	float n_in9p1 = 0.00000;
	float n_in9p2 = 1.00000;
	float n_out9p0 = clamp(n_out7p0, n_in9p1, n_in9p2);


// ColorParameter:10
	vec4 n_out10p0 = ColorParameter;


// VectorOp:11
	vec3 n_out11p0 = vec3(n_out9p0) * vec3(n_out10p0.xyz);


// FloatParameter:15
	float n_out15p0 = Alpha;


// Output:0
	ALBEDO = n_out11p0;
	ALPHA = n_out15p0;


}
"
flags/unshaded = true
nodes/fragment/0/position = Vector2(1240, -200)
nodes/fragment/2/node = SubResource("VisualShaderNodeFresnel_mua1j")
nodes/fragment/2/position = Vector2(-420, 260)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatFunc_j8258")
nodes/fragment/3/position = Vector2(-102.229, 417.258)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_uk3bl")
nodes/fragment/4/position = Vector2(-760, 100)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_71r1b")
nodes/fragment/5/position = Vector2(-980, 300)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatParameter_vmf6n")
nodes/fragment/6/position = Vector2(-880, 440)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatOp_3x2dc")
nodes/fragment/7/position = Vector2(140, 120)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatParameter_c4jlb")
nodes/fragment/8/position = Vector2(-320, -40)
nodes/fragment/9/node = SubResource("VisualShaderNodeClamp_8rtwy")
nodes/fragment/9/position = Vector2(429.478, -8.75118)
nodes/fragment/10/node = SubResource("VisualShaderNodeColorParameter_aqfx6")
nodes/fragment/10/position = Vector2(340, -300)
nodes/fragment/11/node = SubResource("VisualShaderNodeVectorOp_lauyt")
nodes/fragment/11/position = Vector2(760, -160)
nodes/fragment/14/node = SubResource("VisualShaderNodeFloatFunc_aqfx6")
nodes/fragment/14/position = Vector2(1063.2, -395.632)
nodes/fragment/15/node = SubResource("VisualShaderNodeFloatParameter_6pngg")
nodes/fragment/15/position = Vector2(880, 80)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 4, 0, 2, 0, 5, 0, 2, 1, 6, 0, 2, 3, 3, 0, 7, 0, 8, 0, 7, 1, 9, 0, 11, 0, 10, 0, 11, 1, 7, 0, 9, 0, 11, 0, 14, 0, 11, 0, 0, 0, 15, 0, 0, 1)
