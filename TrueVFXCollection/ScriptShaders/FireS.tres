[gd_resource type="VisualShader" load_steps=24 format=3 uid="uid://bvo7tit6ys0ci"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_h52ei"]
operator = 5

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_6mf18"]
parameter_name = "Power"

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_2u8r5"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_6vgi4"]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_bvxob"]
op_type = 0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_absv2"]
parameter_name = "noisevelocity"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_sgsvs"]
operator = 2

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_forjc"]
parameter_name = "Vector2Parameter"
default_value_enabled = true
default_value = Vector2(1, 1)

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ax7ks"]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_v7wlq"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_7wjbr"]
parameter_name = "Texture2DParameter"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_cvreb"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_jd830"]
parameter_name = "Erasenoise"

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_ow1r4"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_ru6ad"]
parameter_name = "EmissionColor"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_ow8kj"]
source = 5

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_o0vwv"]
default_input_values = [0, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_xh8jv"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
expanded_output_ports = [0]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_rgcot"]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_1f7pi"]
operator = 2

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_xlvyl"]
parameter_name = "Noise"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_okse6"]
source = 5

[sub_resource type="VisualShaderNodeBillboard" id="VisualShaderNodeBillboard_4tc3v"]
billboard_type = 3
keep_scale = true

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D Texture2DParameter;
uniform float Power;
uniform vec2 Vector2Parameter = vec2(1.000000, 1.000000);
uniform float noisevelocity;
uniform sampler2D Noise;
uniform float Erasenoise;
uniform vec4 EmissionColor : source_color;



void vertex() {
	mat4 n_out2p0;
// GetBillboardMatrix:2
	{
		mat4 __wm = mat4(normalize(INV_VIEW_MATRIX[0]), normalize(INV_VIEW_MATRIX[1]), normalize(INV_VIEW_MATRIX[2]), MODEL_MATRIX[3]);
		__wm = __wm * mat4(vec4(cos(INSTANCE_CUSTOM.x), -sin(INSTANCE_CUSTOM.x), 0.0, 0.0), vec4(sin(INSTANCE_CUSTOM.x), cos(INSTANCE_CUSTOM.x), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));
		__wm = __wm * mat4(vec4(length(MODEL_MATRIX[0].xyz), 0.0, 0.0, 0.0), vec4(0.0, length(MODEL_MATRIX[1].xyz), 0.0, 0.0), vec4(0.0, 0.0, length(MODEL_MATRIX[2].xyz), 0.0), vec4(0.0, 0.0, 0.0, 1.0));
		n_out2p0 = VIEW_MATRIX * __wm;
	}


// Output:0
	MODELVIEW_MATRIX = n_out2p0;


}

void fragment() {
	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(Texture2DParameter, UV);


// Input:6
	vec4 n_out6p0 = COLOR;


// VectorOp:5
	vec4 n_out5p0 = n_out3p0 * n_out6p0;


// FloatParameter:11
	float n_out11p0 = Power;


// VectorOp:10
	vec3 n_out10p0 = pow(vec3(n_out5p0.xyz), vec3(n_out11p0));


// Input:18
	vec2 n_out18p0 = UV;


// Vector2Parameter:17
	vec2 n_out17p0 = Vector2Parameter;


// VectorOp:19
	vec2 n_out19p0 = n_out18p0 * n_out17p0;


// FloatParameter:15
	float n_out15p0 = noisevelocity;


// Input:13
	float n_out13p0 = TIME;


// FloatOp:16
	float n_out16p0 = n_out15p0 * n_out13p0;


// VectorCompose:14
	float n_in14p0 = 0.00000;
	vec2 n_out14p0 = vec2(n_in14p0, n_out16p0);


// UVFunc:12
	vec2 n_in12p1 = vec2(1.00000, 1.00000);
	vec2 n_out12p0 = n_out14p0 * n_in12p1 + n_out19p0;


	vec4 n_out9p0;
// Texture2D:9
	n_out9p0 = texture(Noise, n_out12p0);


// FloatParameter:21
	float n_out21p0 = Erasenoise;


// VectorOp:20
	vec3 n_out20p0 = vec3(n_out9p0.xyz) + vec3(n_out21p0);


// Clamp:22
	float n_in22p1 = 0.00000;
	float n_in22p2 = 1.00000;
	float n_out22p0 = clamp(n_out20p0.x, n_in22p1, n_in22p2);


// VectorOp:7
	vec3 n_out7p0 = n_out10p0 * vec3(n_out22p0);


// VectorDecompose:4
	float n_out4p0 = n_out5p0.x;
	float n_out4p1 = n_out5p0.y;
	float n_out4p2 = n_out5p0.z;
	float n_out4p3 = n_out5p0.w;


// ColorParameter:23
	vec4 n_out23p0 = EmissionColor;


// Output:0
	ALBEDO = n_out7p0;
	ALPHA = n_out4p3;
	EMISSION = vec3(n_out23p0.xyz);


}
"
nodes/vertex/2/node = SubResource("VisualShaderNodeBillboard_4tc3v")
nodes/vertex/2/position = Vector2(-20, 400)
nodes/vertex/connections = PackedInt32Array(2, 0, 0, 10)
nodes/fragment/0/position = Vector2(660, 140)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_7wjbr")
nodes/fragment/2/position = Vector2(-2020, 520)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_ow8kj")
nodes/fragment/3/position = Vector2(-1560, 440)
nodes/fragment/4/node = SubResource("VisualShaderNodeVectorDecompose_o0vwv")
nodes/fragment/4/position = Vector2(-640, 560)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorOp_xh8jv")
nodes/fragment/5/position = Vector2(-1140, 320)
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_rgcot")
nodes/fragment/6/position = Vector2(-1600, 260)
nodes/fragment/7/node = SubResource("VisualShaderNodeVectorOp_1f7pi")
nodes/fragment/7/position = Vector2(-20, 20)
nodes/fragment/8/node = SubResource("VisualShaderNodeTexture2DParameter_xlvyl")
nodes/fragment/8/position = Vector2(-1360, -80)
nodes/fragment/9/node = SubResource("VisualShaderNodeTexture_okse6")
nodes/fragment/9/position = Vector2(-840, -60)
nodes/fragment/10/node = SubResource("VisualShaderNodeVectorOp_h52ei")
nodes/fragment/10/position = Vector2(-740, 300)
nodes/fragment/11/node = SubResource("VisualShaderNodeFloatParameter_6mf18")
nodes/fragment/11/position = Vector2(-1540, 720)
nodes/fragment/12/node = SubResource("VisualShaderNodeUVFunc_2u8r5")
nodes/fragment/12/position = Vector2(-1140, -360)
nodes/fragment/13/node = SubResource("VisualShaderNodeInput_6vgi4")
nodes/fragment/13/position = Vector2(-2220, -40)
nodes/fragment/14/node = SubResource("VisualShaderNodeVectorCompose_bvxob")
nodes/fragment/14/position = Vector2(-1620, -180)
nodes/fragment/15/node = SubResource("VisualShaderNodeFloatParameter_absv2")
nodes/fragment/15/position = Vector2(-2220, -240)
nodes/fragment/16/node = SubResource("VisualShaderNodeFloatOp_sgsvs")
nodes/fragment/16/position = Vector2(-1860, -200)
nodes/fragment/17/node = SubResource("VisualShaderNodeVec2Parameter_forjc")
nodes/fragment/17/position = Vector2(-2020, -500)
nodes/fragment/18/node = SubResource("VisualShaderNodeInput_ax7ks")
nodes/fragment/18/position = Vector2(-2080, -620)
nodes/fragment/19/node = SubResource("VisualShaderNodeVectorOp_v7wlq")
nodes/fragment/19/position = Vector2(-1460, -480)
nodes/fragment/20/node = SubResource("VisualShaderNodeVectorOp_cvreb")
nodes/fragment/20/position = Vector2(-400, -180)
nodes/fragment/21/node = SubResource("VisualShaderNodeFloatParameter_jd830")
nodes/fragment/21/position = Vector2(-760, -340)
nodes/fragment/22/node = SubResource("VisualShaderNodeClamp_ow1r4")
nodes/fragment/22/position = Vector2(-180, -180)
nodes/fragment/23/node = SubResource("VisualShaderNodeColorParameter_ru6ad")
nodes/fragment/23/position = Vector2(-60, 660)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 6, 0, 5, 1, 5, 0, 4, 0, 8, 0, 9, 2, 11, 0, 10, 1, 3, 0, 5, 0, 10, 0, 7, 0, 12, 0, 9, 0, 14, 0, 12, 2, 15, 0, 16, 0, 13, 0, 16, 1, 16, 0, 14, 1, 18, 0, 19, 0, 17, 0, 19, 1, 19, 0, 12, 0, 5, 0, 10, 0, 9, 0, 20, 0, 21, 0, 20, 1, 20, 0, 22, 0, 22, 0, 7, 1, 23, 0, 0, 5, 4, 3, 0, 1, 7, 0, 0, 0)
